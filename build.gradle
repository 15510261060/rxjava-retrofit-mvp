// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }

        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

afterEvaluate {
    testGitHooks.execute()
}

task testGitHooks(type: Copy) {
    println("=====================testGitHooks beginning.=========================")
    description 'Copies the git hooks from team-props/git-hooks to the .git folder.'
    from("${rootDir}/git-hooks")
    into("${rootDir}/.git/hooks")
    include '**/*'
}

gradle.addBuildListener(new BuildListener() {
    @Override
    void buildStarted(Gradle gradle) {
        // 构建开始执行之前的回调
    }

    @Override
    void settingsEvaluated(Settings settings) {
        // setting 评估完成的回调，也就是settings.gradle加载执行完成的回调
    }

    @Override
    void projectsLoaded(Gradle gradle) {
        // project加载完成的回调
    }

    @Override
    void projectsEvaluated(Gradle gradle) {
        // project 评估完成的回调， 也就是所有的build.gradle脚本都加载执行完成的回调
    }

    @Override
    void buildFinished(BuildResult result) {
        // 构建完成的回调
        chmodCommitMsg.execute()
        if (result.getAction().equals("Build") && getMode() == 1) {
            restart.execute()
        }
    }
})

task chmodCommitMsg(){
    def command = "chmod 777  ${rootDir}/.git/hooks/commit-msg "
    try {
        exec {
            executable 'bash'
            args "-c", "$command"
        }
        println("=====================testGitHooks end.=========================")
    } catch (Exception e) {
        println e.message
    }
}




